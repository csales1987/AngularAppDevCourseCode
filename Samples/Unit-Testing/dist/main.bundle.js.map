{"version":3,"sources":["/Users/danwahlin/Dropbox/Projects/GitHub/Courses/AngularAppDevCourseCode/Samples/Unit-Testing/src/$_lazy_route_resource lazy","/Users/danwahlin/Dropbox/Projects/GitHub/Courses/AngularAppDevCourseCode/Samples/Unit-Testing/src/app/app.component.ts","/Users/danwahlin/Dropbox/Projects/GitHub/Courses/AngularAppDevCourseCode/Samples/Unit-Testing/src/app/app.module.ts","/Users/danwahlin/Dropbox/Projects/GitHub/Courses/AngularAppDevCourseCode/Samples/Unit-Testing/src/app/core/core.module.ts","/Users/danwahlin/Dropbox/Projects/GitHub/Courses/AngularAppDevCourseCode/Samples/Unit-Testing/src/app/core/data.service.ts","/Users/danwahlin/Dropbox/Projects/GitHub/Courses/AngularAppDevCourseCode/Samples/Unit-Testing/src/app/core/property-resolver.ts","/Users/danwahlin/Dropbox/Projects/GitHub/Courses/AngularAppDevCourseCode/Samples/Unit-Testing/src/app/core/sorter.service.ts","/Users/danwahlin/Dropbox/Projects/GitHub/Courses/AngularAppDevCourseCode/Samples/Unit-Testing/src/app/customer-orders/customer-orders.component.html","/Users/danwahlin/Dropbox/Projects/GitHub/Courses/AngularAppDevCourseCode/Samples/Unit-Testing/src/app/customer-orders/customer-orders.component.ts","/Users/danwahlin/Dropbox/Projects/GitHub/Courses/AngularAppDevCourseCode/Samples/Unit-Testing/src/app/customers-list/customers-list.component.html","/Users/danwahlin/Dropbox/Projects/GitHub/Courses/AngularAppDevCourseCode/Samples/Unit-Testing/src/app/customers-list/customers-list.component.ts","/Users/danwahlin/Dropbox/Projects/GitHub/Courses/AngularAppDevCourseCode/Samples/Unit-Testing/src/app/customers-list/filter-textbox.component.ts","/Users/danwahlin/Dropbox/Projects/GitHub/Courses/AngularAppDevCourseCode/Samples/Unit-Testing/src/app/customers/customers.component.html","/Users/danwahlin/Dropbox/Projects/GitHub/Courses/AngularAppDevCourseCode/Samples/Unit-Testing/src/app/customers/customers.component.ts","/Users/danwahlin/Dropbox/Projects/GitHub/Courses/AngularAppDevCourseCode/Samples/Unit-Testing/src/app/customers/customers.module.ts","/Users/danwahlin/Dropbox/Projects/GitHub/Courses/AngularAppDevCourseCode/Samples/Unit-Testing/src/app/customers/customers.routing.ts","/Users/danwahlin/Dropbox/Projects/GitHub/Courses/AngularAppDevCourseCode/Samples/Unit-Testing/src/app/shared/capitalize.pipe.ts","/Users/danwahlin/Dropbox/Projects/GitHub/Courses/AngularAppDevCourseCode/Samples/Unit-Testing/src/app/shared/shared.module.ts","/Users/danwahlin/Dropbox/Projects/GitHub/Courses/AngularAppDevCourseCode/Samples/Unit-Testing/src/environments/environment.ts","/Users/danwahlin/Dropbox/Projects/GitHub/Courses/AngularAppDevCourseCode/Samples/Unit-Testing/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/danwahlin/Dropbox/Projects/GitHub/Courses/AngularAppDevCourseCode/Samples/Unit-Testing/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { Component, OnInit} from '@angular/core';\n\n@Component({ \n  selector: 'co-root',\n  template: `\n    <router-outlet></router-outlet>\n  `\n})\nexport class AppComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n    \n  }\n  \n}\n\n\n// WEBPACK FOOTER //\n// /Users/danwahlin/Dropbox/Projects/GitHub/Courses/AngularAppDevCourseCode/Samples/Unit-Testing/src/app/app.component.ts","import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\n\nimport { CoreModule } from './core/core.module';\nimport { CustomersModule } from './customers/customers.module';\nimport { AppComponent }  from './app.component';\n\n@NgModule({\n  imports:      [ BrowserModule, CoreModule, CustomersModule, RouterModule ],\n  declarations: [ AppComponent ],\n  bootstrap:    [ AppComponent ]\n})\nexport class AppModule { }\n\n\n// WEBPACK FOOTER //\n// /Users/danwahlin/Dropbox/Projects/GitHub/Courses/AngularAppDevCourseCode/Samples/Unit-Testing/src/app/app.module.ts","import { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\n\nimport { DataService } from './data.service';\nimport { SorterService } from './sorter.service';\n\n@NgModule({\n    imports: [ HttpModule ],\n    providers: [ DataService, SorterService ]\n})\nexport class CoreModule { }\n\n\n// WEBPACK FOOTER //\n// /Users/danwahlin/Dropbox/Projects/GitHub/Courses/AngularAppDevCourseCode/Samples/Unit-Testing/src/app/core/core.module.ts","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/map'; \nimport 'rxjs/add/operator/catch';\n\nimport { ICustomer, IOrder } from '../../app/shared/interfaces';\n\n@Injectable()\nexport class DataService {\n\n    baseUrl: string = 'assets/';\n    \n    constructor(private http: Http) { }\n\n    getCustomers() : Observable<ICustomer[]> {\n      return this.http.get(this.baseUrl + 'customers.json')\n                  .map((res: Response) => res.json())\n                  .catch(this.handleError);\n    }\n\n    getCustomer(id: number) : Observable<ICustomer> {\n      return this.http.get(this.baseUrl + 'customers.json')\n            .map((res: Response) => {\n              let customer = res.json().filter((cust: ICustomer) => cust.id === id);\n              return (customer && customer.length) ? customer[0] : null;\n            })\n            .catch(this.handleError);\n    }\n\n    getOrders(id: number) : Observable<IOrder[]> {\n      return this.http.get(this.baseUrl + 'orders.json')\n                  .map((res: Response) => {\n                    let orders = res.json().filter((order: IOrder) => order.customerId === id);\n                    return orders;\n                  })\n                  .catch(this.handleError);\n    }\n\n    //Only used for unit test (not used in actual app)\n    insertCustomer(customer: ICustomer) : Observable<ICustomer> {\n      return this.http.post(this.baseUrl + '/customer', customer)\n                 .catch(this.handleError);\n    }\n  \n\n    private handleError(error: any) {\n        console.error('server error:', error); \n        if (error instanceof Response) {\n          let errMessage = '';\n          try {\n            errMessage = error.json().error;\n          } catch(err) {\n            errMessage = error.statusText;\n          }\n          return Observable.throw(errMessage);\n        }\n        return Observable.throw(error || 'Node.js server error');\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /Users/danwahlin/Dropbox/Projects/GitHub/Courses/AngularAppDevCourseCode/Samples/Unit-Testing/src/app/core/data.service.ts","export class propertyResolver {\n     static resolve(path: string, obj: any) {\n      return path.split('.').reduce((prev, curr) => {\n          return (prev ? prev[curr] : undefined)\n      }, obj || self)\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/danwahlin/Dropbox/Projects/GitHub/Courses/AngularAppDevCourseCode/Samples/Unit-Testing/src/app/core/property-resolver.ts","import { Injectable } from '@angular/core';\n\nimport { propertyResolver } from './property-resolver';\n\n@Injectable()\nexport class SorterService {\n\n\tproperty: string = null;\n\tdirection: number = 1;\n\n    sort(collection: any[], prop: any) {\n        this.property = prop;\n        this.direction = (this.property === prop) ? this.direction * -1 : 1;\n\n        collection.sort((a: any,b: any) => {\n            let aVal: any;\n            let bVal: any;\n            \n            //Handle resolving complex properties such as 'state.name' for prop value\n            if (prop && prop.indexOf('.') > -1) {\n              aVal = propertyResolver.resolve(prop, a);\n              bVal = propertyResolver.resolve(prop, b);\n            }\n            else {            \n              aVal = a[prop];\n              bVal = b[prop];\n            }\n            \n            //Fix issues that spaces before/after string value can cause such as ' San Francisco'\n            if (this.isString(aVal)) aVal = aVal.trim().toUpperCase();\n            if (this.isString(bVal)) bVal = bVal.trim().toUpperCase();\n          \n            if(aVal === bVal){\n                return 0;\n            }\n            else if (aVal > bVal){\n                return this.direction * -1;\n            }\n            else {\n                return this.direction * 1;\n            }\n        });\n    }\n    \n    isString(val: any) : boolean {\n      return (val && (typeof val === 'string' || val instanceof String));\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /Users/danwahlin/Dropbox/Projects/GitHub/Courses/AngularAppDevCourseCode/Samples/Unit-Testing/src/app/core/sorter.service.ts","module.exports = \"<div class=\\\"row\\\" *ngIf=\\\"customer\\\">\\n    <h4>Orders for {{ customer.name | capitalize }}</h4>\\n    <br />\\n    <table class=\\\"table table-striped table-hover orders-table\\\" \\n           *ngFor=\\\"let order of orders\\\">\\n        <tr *ngFor=\\\"let orderItem of order.orderItems\\\">\\n            <td>{{ orderItem.productName }}</td>\\n            <td>${{ orderItem.itemCost }}</td>    \\n        </tr>\\n    </table>\\n</div>\\n<div *ngIf=\\\"!customer\\\" class=\\\"row\\\">\\n   No customer found\\n</div>  \\n<br />\\n<a routerLink=\\\"/customers\\\">View All Customers</a>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/danwahlin/Dropbox/Projects/GitHub/Courses/AngularAppDevCourseCode/Samples/Unit-Testing/src/app/customer-orders/customer-orders.component.html\n// module id = ../../../../../src/app/customer-orders/customer-orders.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\n\nimport { DataService } from '../core/data.service';\nimport { ICustomer, IOrder, IOrderItem } from '../shared/interfaces';\n\n@Component({\n  selector: 'co-customer-orders',\n  templateUrl: './customer-orders.component.html'\n})\nexport class CustomerOrdersComponent implements OnInit {\n\n  orders: IOrder[] = [];\n  customer: ICustomer;\n\n  constructor(private dataService: DataService, \n              private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    let id = +this.route.snapshot.params['id'];\n    this.dataService.getOrders(id).subscribe((orders: IOrder[]) => {\n      this.orders = orders;\n    });\n    this.dataService.getCustomer(id).subscribe((customer: ICustomer) => {\n      this.customer = customer;\n    });\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// /Users/danwahlin/Dropbox/Projects/GitHub/Courses/AngularAppDevCourseCode/Samples/Unit-Testing/src/app/customer-orders/customer-orders.component.ts","module.exports = \"<h1>{{ title }}</h1>\\n<br />\\n<co-filter-textbox (changed)=\\\"filter($event)\\\"></co-filter-textbox>\\n<br />\\n<br />\\n<table class=\\\"table table-striped\\\">\\n    <tr>\\n        <th (click)=\\\"sort('name')\\\">Name</th>\\n        <th (click)=\\\"sort('city')\\\">City</th>\\n        <th (click)=\\\"sort('orderTotal')\\\">Order Total</th>\\n    </tr>\\n    <tr *ngFor=\\\"let cust of filteredCustomers;trackBy:customerTrackBy;\\\">\\n        <td>\\n            <a [routerLink]=\\\"['/orders', cust.id]\\\">\\n                {{ cust.name | capitalize }}\\n            </a>\\n        </td>\\n        <td>{{ cust.city }}</td>\\n        <td>{{ cust.orderTotal | currency:currencyCode:true }}\\n    </tr>\\n    <tr>\\n        <td colspan=\\\"2\\\">&nbsp;</td>\\n        <td>\\n            {{ customersOrderTotal | currency:currencyCode:true }}\\n        </td>\\n    </tr>\\n    <tr *ngIf=\\\"!filteredCustomers || !filteredCustomers.length\\\">\\n        <td colspan=\\\"4\\\">No customers found</td>\\n    </tr>\\n</table>\\n<br />\\nNumber of Customers: {{ filteredCustomers.length }}\\n<br />\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/danwahlin/Dropbox/Projects/GitHub/Courses/AngularAppDevCourseCode/Samples/Unit-Testing/src/app/customers-list/customers-list.component.html\n// module id = ../../../../../src/app/customers-list/customers-list.component.html\n// module chunks = main","import { Component, Input, OnInit } from '@angular/core';\n\nimport { ICustomer } from '../shared/interfaces';\nimport { SorterService } from '../core/sorter.service';\n\n@Component({\n    selector: 'co-customers-list',\n    templateUrl: './customers-list.component.html'\n})\nexport class CustomersListComponent implements OnInit {\n    private _customers: ICustomer[] = [];\n\n    title: string;\n    @Input() get customers(): ICustomer[] { \n        return this._customers; \n    };\n    set customers(value: ICustomer[]) { \n        if (value) {\n            this.filteredCustomers = this._customers = value; \n            this.calculateOrders();\n        }\n    }\n    filteredCustomers: ICustomer[] = [];\n    customersOrderTotal: number;\n    currencyCode: string = 'USD';\n\n    constructor(private sorter: SorterService) { }\n\n    ngOnInit() { \n        this.title = 'Customers';\n    }\n\n    calculateOrders() {\n        this.customersOrderTotal = 0;\n        this.filteredCustomers.forEach((cust: ICustomer) => {\n            this.customersOrderTotal += cust.orderTotal;\n        });\n    }\n\n    filter(data: string) {\n        if (data) {\n            this.filteredCustomers = this.customers.filter((cust: ICustomer) => {\n                return cust.name.toLowerCase().indexOf(data.toLowerCase()) > -1;\n            });\n            this.calculateOrders();\n        } else {\n            this.filteredCustomers = this.customers;\n        }\n    }\n\n    sort(prop: string) {\n        this.sorter.sort(this.filteredCustomers, prop);\n    }\n\n    customerTrackBy(index: number, customer: ICustomer) {\n        return customer.id;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /Users/danwahlin/Dropbox/Projects/GitHub/Courses/AngularAppDevCourseCode/Samples/Unit-Testing/src/app/customers-list/customers-list.component.ts","import { Component, Output, EventEmitter, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'co-filter-textbox',\n    template: `    \n        Filter: <input type=\"text\" [(ngModel)]=\"filter\" (keyup)=\"filterChanged($event)\" />\n              <!--<button [disabled]=\"!filter\" (click)=\"filterChanged($event)\">Filter</button>-->\n    `\n})\nexport class FilterTextboxComponent implements OnInit {\n\n    filter: string = null;\n    \n    @Output() changed: EventEmitter<string> = new EventEmitter<string>();\n\n    constructor() { }\n\n    ngOnInit() { \n\n    }\n\n    filterChanged(event: any) {\n      event.preventDefault();\n      this.changed.emit(this.filter); //Raise changed event\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /Users/danwahlin/Dropbox/Projects/GitHub/Courses/AngularAppDevCourseCode/Samples/Unit-Testing/src/app/customers-list/filter-textbox.component.ts","module.exports = \"<co-customers-list [customers]=\\\"people\\\"></co-customers-list>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/danwahlin/Dropbox/Projects/GitHub/Courses/AngularAppDevCourseCode/Samples/Unit-Testing/src/app/customers/customers.component.html\n// module id = ../../../../../src/app/customers/customers.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\nimport { ICustomer } from '../shared/interfaces';\nimport { DataService } from '../core/data.service';\n\n@Component({\n    selector: 'co-customers',\n    templateUrl: './customers.component.html'\n})\nexport class CustomersComponent implements OnInit {\n\n    people: ICustomer[];\n\n    constructor(private dataservice: DataService) { }\n\n    ngOnInit() { \n      this.dataservice.getCustomers()\n          .subscribe((customers: ICustomer[]) => this.people = customers);\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /Users/danwahlin/Dropbox/Projects/GitHub/Courses/AngularAppDevCourseCode/Samples/Unit-Testing/src/app/customers/customers.component.ts","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { SharedModule } from '../shared/shared.module';\nimport { customersRouting } from './customers.routing';\n\n@NgModule({\n    imports: [ CommonModule, FormsModule, SharedModule, customersRouting.routes ],\n    declarations: [ customersRouting.components ]\n})\nexport class CustomersModule { }\n\n\n// WEBPACK FOOTER //\n// /Users/danwahlin/Dropbox/Projects/GitHub/Courses/AngularAppDevCourseCode/Samples/Unit-Testing/src/app/customers/customers.module.ts","import { RouterModule, Routes } from '@angular/router';\n\nimport { CustomersListComponent } from '../customers-list/customers-list.component';\nimport { FilterTextboxComponent } from '../customers-list/filter-textbox.component';\nimport { CustomersComponent } from './customers.component';\nimport { CustomerOrdersComponent } from '../customer-orders/customer-orders.component';\n\nconst routes: Routes = [\n    { path: '', pathMatch: 'full', redirectTo: '/customers'},\n    { path: 'customers', component: CustomersComponent },\n    { path: 'orders/:id', component: CustomerOrdersComponent }\n];\n\nexport const customersRouting = {\n    routes: RouterModule.forRoot(routes),\n    components: [ CustomersComponent, CustomerOrdersComponent,\n                  CustomersListComponent, FilterTextboxComponent ]\n};\n\n\n// WEBPACK FOOTER //\n// /Users/danwahlin/Dropbox/Projects/GitHub/Courses/AngularAppDevCourseCode/Samples/Unit-Testing/src/app/customers/customers.routing.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'capitalize' })\nexport class CapitalizePipe implements PipeTransform {\n    transform(value: any) {\n        if (value) {\n            return value.charAt(0).toUpperCase() + value.slice(1);\n        }\n        return value;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/danwahlin/Dropbox/Projects/GitHub/Courses/AngularAppDevCourseCode/Samples/Unit-Testing/src/app/shared/capitalize.pipe.ts","import { NgModule } from '@angular/core';\n\nimport { CapitalizePipe } from './capitalize.pipe';\n\n\n@NgModule({\n    declarations: [ CapitalizePipe ],\n    exports: [ CapitalizePipe ]\n})\nexport class SharedModule { }\n\n\n// WEBPACK FOOTER //\n// /Users/danwahlin/Dropbox/Projects/GitHub/Courses/AngularAppDevCourseCode/Samples/Unit-Testing/src/app/shared/shared.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/danwahlin/Dropbox/Projects/GitHub/Courses/AngularAppDevCourseCode/Samples/Unit-Testing/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /Users/danwahlin/Dropbox/Projects/GitHub/Courses/AngularAppDevCourseCode/Samples/Unit-Testing/src/main.ts"],"sourceRoot":"webpack:///"}